version: "3.8"
services:
  gateway:
    container_name: gateway
    image: ${GATEWAY_IMAGE}
    ports:
      - "5000:5000"
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: users
      TRIP_RESEARCHER_ADDRESS: localhost:8000
      RESERVATIONS_MS_ADDRESS: reservations:8001
      PURCHASE_MS_ADDRESS: purchases:8002
      PAYMENT_MS_ADDRESS: payments:8003
      RABBITMQ_ADDRESS: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgresql:
        condition: service_healthy
  data-init:
    container_name: data-init
    image: ${DATA_INIT_IMAGE}
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: users
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: admin
      MONGODB_DB: trips_db
    depends_on:
      mongodb:
        condition: service_healthy
      postgresql:
        condition: service_healthy
  postgresql:
    container_name: postgresql
    image: ${POSTGRES_IMAGE}
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin"]
      interval: 5s
      timeout: 1s
      retries: 10
  mongodb:
    container_name: mongodb
    image: ${MONGO_IMAGE}
    ports:
      - "27017:27017"
    healthcheck:
      test: [ "CMD", "mongosh", "--version" ]
      interval: 5s
      timeout: 1s
      retries: 10
  rabbitmq:
    container_name: rabbitmq
    image: ${RABBIT_IMAGE}
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  reservations:
    container_name: reservations-ms
    image: ${RESERVATIONS_IMAGE}
    ports:
      - "8001:8001"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: admin
      MONGODB_DB: reservations_db
      RABBITMQ_ADDRESS: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
  purchases:
    container_name: purchase-ms
    image: ${PURCHASE_IMAGE}
    ports:
      - "8002:8002"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: admin
      MONGODB_DB: purchases_db
      RABBITMQ_ADDRESS: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
  payments:
    container_name: payment-ms
    image: ${PAYMENT_IMAGE}
    ports:
      - "8003:8003"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: admin
      MONGODB_PASSWORD: admin
      MONGODB_DB: payments_db
      RABBITMQ_ADDRESS: rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongodb:
        condition: service_healthy
