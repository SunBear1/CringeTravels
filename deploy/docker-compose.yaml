version: "3.8"
services:
  gui:
    container_name: web-gui
    image: ${GUI_IMAGE}
    restart: always
    ports:
      - "18005:80"
  gateway:
    container_name: gateway
    image: ${GATEWAY_IMAGE}
    restart: always
    ports:
      - "18000:8080"
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
      POSTGRES_DB: rsww_17998_users
      TRIP_RESEARCHER_ADDRESS: trips:8000
      RESERVATIONS_MS_ADDRESS: reservations:8001
      PURCHASE_MS_ADDRESS: purchases:8002
      PAYMENT_MS_ADDRESS: payments:8003
      RABBITMQ_ADDRESS: rabbitmq
      RABBITMQ_PORT: 5672
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  data-init:
    container_name: data-init
    image: ${DATA_INIT_IMAGE}
    restart: "no"
    environment:
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
      PG_DB_USERS_NAME: rsww_17998_users
      PG_DB_EVENTS_NAME: rsww_17998_events
      PG_DB_HOTELS_NAME: rsww_17998_hotels
      PG_DB_TRANSPORTS_NAME: rsww_17998_transports
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: student
      MONGODB_RESERVATIONS_DB: rsww_17998_reservations_db
      MONGODB_RESERVATIONS_COLL: trip-offers
      MONGODB_TRIPS_DB: rsww_17998_trips_db
      MONGODB_TRIPS_COLL: trips
      MONGODB_PURCHASES_DB: rsww_17998_purchases_db
      MONGODB_PAYMENTS_DB: rsww_17998_payments_db
    depends_on:
      mongodb:
        condition: service_healthy
      postgresql:
        condition: service_healthy
  postgresql:
    container_name: postgresql
    image: postgres:13
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 1s
      retries: 10
  mongodb:
    container_name: mongodb
    image: mongo:4.4.9
    restart: always
    ports:
      - "27017:27017"
    environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: student
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "\"db.adminCommand('ping')\"" ]
      interval: 5s
      timeout: 1s
      retries: 10
  rabbitmq:
    container_name: rabbitmq
    image: ${RABBIT_IMAGE}
    restart: always
    ports:
      - "17998:5672"
      - "18004:15672"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  reservations:
    container_name: reservations-ms
    image: ${RESERVATIONS_IMAGE}
    restart: always
    ports:
      - "18001:8001"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: student
      MONGODB_DB: rsww_17998_reservations_db
      RABBITMQ_ADDRESS: rabbitmq
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  purchases:
    container_name: purchase-ms
    image: ${PURCHASE_IMAGE}
    restart: always
    ports:
      - "18002:8002"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: student
      MONGODB_DB: rsww_17998_purchases_db
      RABBITMQ_ADDRESS: rabbitmq
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  payments:
    container_name: payment-ms
    image: ${PAYMENT_IMAGE}
    restart: always
    ports:
      - "18003:8003"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: student
      MONGODB_DB: rsww_17998_payments_db
      RABBITMQ_ADDRESS: rabbitmq
  trips:
    container_name: trips-ms
    image: ${TRIPS_IMAGE}
    ports:
      - "17999:8000"
    environment:
      MONGODB_PORT: 27017
      MONGODB_ADDRESS: mongodb
      MONGODB_USER: root
      MONGODB_PASSWORD: student
      MONGODB_DB: rsww_17998_trips_db
      RABBITMQ_ADDRESS: rabbitmq
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  hotels:
    container_name: hotel-ms
    image: ${HOTEL_IMAGE}
    restart: always
    environment:
      RABBITMQ_ADDRESS: rabbitmq
      RABBITMQ_PORT: 5672
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
      PG_DB_HOTELS_NAME: rsww_17998_hotels
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  transports:
    container_name: transport-ms
    image: ${TRANSPORT_IMAGE}
    restart: always
    environment:
      RABBITMQ_ADDRESS: rabbitmq
      RABBITMQ_PORT: 5672
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
      PG_DB_TRANSPORTS_NAME: rsww_17998_transports
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  event-generator:
    container_name: event-generator
    image: ${EVENT_GENERATOR_IMAGE}
    restart: always
    environment:
      RABBITMQ_ADDRESS: rabbitmq
      RABBITMQ_PORT: 5672
      GENERATION_FREQUENCY: 30
      ACTIVATE_GENERATION: "True"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  event-hub:
    container_name: eventhub-ms
    image: ${EVENTHUB_IMAGE}
    restart: always
    environment:
      RABBITMQ_ADDRESS: rabbitmq
      RABBITMQ_PORT: 5672
      POSTGRES_PORT: 5432
      POSTGRES_ADDRESS: postgresql
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: student
      PG_DB_EVENTHUB_NAME: rsww_17998_events
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://rabbitmq:15672" ]
      interval: 5s
      timeout: 1s
      retries: 10
  event-hub-v2:
    container_name: eventhub-v2-ms
    image: ${EVENTHUB_V2_IMAGE}
    ports:
      - "17997:8080"